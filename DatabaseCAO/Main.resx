<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>